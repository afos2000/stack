apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo
  namespace: argo
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - deletecollection
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: argo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo
subjects:
- kind: ServiceAccount
  name: argo
  namespace: argo
---
apiVersion: v1
kind: Secret
metadata:
  name: argo.service-account-token
  namespace: argo
  annotations:
    kubernetes.io/service-account.name: argo
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv0001
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 5Gi
  hostPath:
    path: /data/pv0001/
---
apiVersion: v1
data:
  key: admin
  test: "123"
kind: ConfigMap
metadata:
  name: reflector
  annotations:
   reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
   reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "mlflow, argo, argocd"