argo-workflows:
  # commonLabels: argo-workflows-dev
  nameOverride: argo-workflows
  controller:
    replicas: 2
    metricsConfig:
      enabled: true
    retentionPolicy: 
      completed: 10
      failed: 10
      errored: 10
    # persistence:
    #   connectionPool:
    #     maxIdleConns: 100
    #     maxOpenConns: 0
      # save the entire workflow into etcd and DB
      # nodeStatusOffLoad: true
      # enable archiving of old workflows
      # archive: true
      # archiveTTL: 7d
      # postgresql:
      #   host: postgres-postgresql
      #   port: 5432
      #   database: postgres
      #   tableName: argo_workflows
      #   # the database secrets must be in the same namespace of the controller
      #   userNameSecret:
      #     name: argo-postgres
      #     key: username
      #   passwordSecret:
      #     name: argo-postgres
      #     key: password
    
    workflowDefaults:
      spec:
        podMetadata:
          labels:
            logging: "artis"
        activeDeadlineSeconds: 28800
        podGC:
          strategy: OnPodCompletion
        serviceAccountName: argo
        ttlStrategy:
          secondsAfterCompletion: 10 # Time to live after workflow is completed, replaces ttlSecondsAfterFinished
          secondsAfterSuccess: 5     # Time to live after workflow is successful
          secondsAfterFailure: 5     # Time to live after workflow fails




    logging:
      format: "text"
    
    serviceLabels:
      app: "workflow-controller"


  useDefaultArtifactRepo:  true

  # artifactRepository:
  #   archiveLogs: true
  #   s3:
  #     accessKeySecret:
  #       name: minio-cred
  #       key: username
  #     secretKeySecret:
  #       name: minio-cred
  #       key: password
  #     # insecure will disable TLS. Primarily used for minio installs not configured with TLS
  #     insecure: true
  #     bucket: argo-storage
  #     endpoint: minio.minio:9000